source: https://github.com/entigolabs/entigo-infralib-release
base_config:
  profile: minimal
prefix: ep
version: stable
agent_version: latest
steps:
  - name: net
    type: terraform
    workspace: dev
    provider:
      aws:
        default_tags:
          tags:
            team: networking
    approve: minor
    modules:
      - name: main
        source: aws/vpc
        version: stable
        inputs:
          vpc_cidr: "10.175.0.0/16"
          one_nat_gateway_per_az: false
          azs: 2
          intra_subnets: |
            []
          elasticache_subnets: |
            []
          database_subnets: |
            []
      - name: second
        source: aws/vpc
        version: stable
        inputs:
          vpc_cidr: "10.176.0.0/16"
          one_nat_gateway_per_az: false
          azs: 3
          intra_subnets: |
            []
          elasticache_subnets: |
            []
          database_subnets: |
            []

  - name: infra
    type: terraform
    workspace: dev
    provider:
      aws:
        default_tags:
          tags:
            team: infrastructure
    version: stable
    vpc_id: "{{ .ssm.net.main.vpc_id }}"
    vpc_subnet_ids: |
      [{{ .ssm.net.main.private_subnets }}]
    vpc_security_group_ids: |
      [{{ .ssm.net.main.pipeline_security_group }}]
    approve: minor
    modules:
      - name: dns
        source: aws/route53
        version: stable
        inputs:
          parent_zone_id: "Z07983041XRLSLZUTHHDY"
          vpc_id: "{{ ssm.net.main.vpc_id }}"
          public_subdomain_name: "minimal"
          create_private: false
      - name: eks
        source: aws/eks
        version: stable
        inputs:
          vpc_id: "{{ .ssm.net.main.vpc_id }}"
          private_subnets: |
            [{{ .ssm.net.main.private_subnets }}]
          public_subnets: |
            [{{ .ssm.net.main.public_subnets }}]
          eks_api_access_cidrs: |
            [{{ .ssm.net.main.private_subnet_cidrs }}]
          eks_cluster_public: true
          eks_main_min_size: 3
          eks_main_max_size: 6
          eks_spot_max_size: 0
          eks_db_max_size: 0
          cluster_enabled_log_types: |
            []
      - name: crossplane
        source: aws/crossplane
        version: stable
        inputs:
          eks_oidc_provider: |
            module.eks.oidc_provider
          eks_oidc_provider_arn: |
            module.eks.oidc_provider_arn
  - name: helm
    type: terraform
    workspace: dev
    approve: minor
    version: stable
    vpc_id: '{{ .ssm.net.main.vpc_id }}'
    vpc_subnet_ids: |
      [{{ .ssm.net.main.private_subnets }}]
    vpc_security_group_ids: |
      [{{ .ssm.net.main.pipeline_security_group }}]
    provider:
      inputs:
        eks_cluster_name: '{{ .ssm.infra.eks.cluster_name }}'
      aws: { }
      kubernetes: { }
    modules:
      - name: argocd
        source: aws/argocd
        version: stable
        inputs:
          argocd_apps_name: '{{ .config.prefix }}-applications'
          codecommit_name: "{{ .config.prefix }}-{{ .agent.accountId }}"
          branch: '{{ .agent.version.helm.argocd }}'
          hostname: argocd.{{ ssm.infra.dns.pub_domain }}
          name: argocd
          namespace: argocd
          ingress_group_name: "external"
          ingress_scheme: "internet-facing"
  - name: applications
    type: argocd-apps
    workspace: dev
    version: stable
    vpc_id: '{{ .ssm.net.main.vpc_id }}'
    vpc_subnet_ids: |
      [{{ .ssm.net.main.private_subnets }}]
    vpc_security_group_ids: |
      [{{ .ssm.net.main.pipeline_security_group }}]
    repo_url: '{{ .ssm.helm.argocd.repo_url }}'
    modules:
      - name: aws-alb-devops
        source: aws-alb
        version: stable
        inputs:
          aws-load-balancer-controller:
            clusterName: '{{ .ssm.infra.eks.cluster_name }}'
          awsAccount: '{{ .ssm.infra.eks.account }}'
          clusterOIDC: '{{ .ssm.infra.eks.oidc_provider }}'
      - name: crossplane-system
        source: crossplane
        version: stable
        inputs:
          awsRole: '{{ .ssm.infra.crossplane.iam_role }}'
      - name: external-dns-devops
        source: external-dns
        version: stable
        inputs:
          awsAccount: '{{ .ssm.infra.eks.account }}'
          clusterOIDC: '{{ .ssm.infra.eks.oidc_provider }}'
          external-dns:
            image:
              tag: "v0.13.6"
            sources:
              - service
              - ingress
              - istio-gateway
              - istio-virtualservice
            extraArgs:
              - --metrics-address=:7979
      - name: loki
        source: loki
        version: stable
        inputs:
          awsAccount: '{{ .ssm.infra.eks.account }}'
          clusterOIDC: '{{ .ssm.infra.eks.oidc_provider }}'
          bucketName: '{{ .config.prefix }}-entigo-loki-logs'
          region: "{{ .ssm.infra.eks.region }}"
          promtail:
            image:
              registry: registry.devops.learn.entigo.io/hub
          loki:
            gateway:
              ingress:
                annotations:
                  alb.ingress.kubernetes.io/group.name: external
                  alb.ingress.kubernetes.io/scheme: internet-facing
                hosts:
                  - host: loki.{{ ssm.infra.dns.pub_domain }}
                    paths:
                      - path: "/"
                        pathType: "Prefix"
            read:
              replicas: 3
            loki:
              image:
                registry: registry.devops.learn.entigo.io/hub
              storage:
                s3:
                  region: "{{ .ssm.infra.eks.region }}"
                bucketNames:
                  chunks: '{{ .config.prefix }}-entigo-loki-logs'
                  ruler: '{{ .config.prefix }}-entigo-loki-logs'
                  admin: '{{ .config.prefix }}-entigo-loki-logs'
              storage_config:
                aws:
                  region: "{{ .ssm.infra.eks.region }}"
                  bucketnames: '{{ .config.prefix }}-entigo-loki-logs'
      - name: prometheus
        source: prometheus
        version: stable
        inputs:
          prometheus:
            server:
              global:
                scrape_interval: 30s
              ingress:
                annotations:
                  alb.ingress.kubernetes.io/group.name: external
                  alb.ingress.kubernetes.io/scheme: internet-facing
                hosts:
                  - prometheus.{{ ssm.infra.dns.pub_domain }}
      - name: istio-base
        source: istio-base
        version: stable
      - name: istio-system
        source: istio-istiod
        version: stable
        inputs:
          istiod:
            global:
              hub: registry.devops.learn.entigo.io/hub/istio
            pilot:
              traceSampling: 100
      - name: istio-gateway
        source: istio-gateway
        version: stable
        inputs:
          certificateArn: "{{ ssm.infra.dns.pub_cert_arn }}"
      - name: kiali
        source: kiali
        version: stable
        inputs:
          kiali-server:
            auth:
              strategy: "anonymous"
            server:
              web_fqdn: kiali.{{ ssm.infra.dns.pub_domain }}
            deployment:
              ingress:
                override_yaml:
                  metadata:
                    annotations:
                      alb.ingress.kubernetes.io/group.name: external
                      alb.ingress.kubernetes.io/scheme: internet-facing
      - name: aws-storageclass
        source: aws-storageclass
        version: stable
      - name: metrics-server
        source: metrics-server
        version: stable
      - name: external-secrets-devops
        source: external-secrets
        version: stable
        inputs:
          awsRegion: "{{ .ssm.infra.eks.region }}"
          awsAccount: "{{ .ssm.infra.eks.account }}"
          clusterOIDC: "{{ .ssm.infra.eks.oidc_provider }}"
  - name: additional
    type: terraform-custom
    workspace: dev
    vpc_prefix: net-second
    approve: never
